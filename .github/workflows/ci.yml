name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Use the Node.js version specified in package.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Run npm audit
        run: npm audit --production || true # Allow audit to fail without failing the build

  build:
    runs-on: ubuntu-latest
    needs: lint-and-test # Ensure linting and testing pass before building

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-build
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build # Ensure build passes before deploying
    if: github.ref == 'refs/heads/main' # Only deploy on push to main branch

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-build
          path: dist

      - name: Deploy (Placeholder)
        run: |
          echo "Deployment steps go here."
          echo "For example, you might use rsync, a cloud provider CLI, or a custom script."
          # Example: rsync -avz dist/ user@your-server:/var/www/html/
          # Example: aws s3 sync dist/ s3://your-bucket-name
